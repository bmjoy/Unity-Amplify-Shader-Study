
#pragma kernel CSMain

#define TRUE 1
#define FALSE 0

struct Dirt
{
    float3 position;
    int isAlive;
};

RWStructuredBuffer<Dirt> dirtBuffer;
RWStructuredBuffer<uint> aliveNumberBuffer; // 생존한 먼지 개수

float3 centerPos;
float sqrRange;
float sqrDeathRange;
float sqrForce;

[numthreads(64,1,1)]
void CSMain (uint3 id : SV_DispatchThreadID)
{
    uint i = id.x;
    if(dirtBuffer[i].isAlive == FALSE) return;
    
    float3 offs = (centerPos - dirtBuffer[i].position);
    float sqrDist = (offs.x * offs.x) + (offs.y * offs.y) + (offs.z * offs.z);

    if (sqrDist < sqrDeathRange)
    {
        dirtBuffer[i].isAlive = FALSE;
        InterlockedAdd(aliveNumberBuffer[0], -1);
    }
    else if (sqrDist < sqrRange)
    {
        float3 dir = normalize(centerPos - dirtBuffer[i].position);
        float weightedForce = sqrForce / sqrDist;
        dirtBuffer[i].position += dir * weightedForce;
    }
}
